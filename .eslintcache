[{"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/index.js":"1","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/App.js":"2","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/serviceWorker.js":"3","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/reportWebVitals.js":"4","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Logo.js":"5","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/ColorModeSwitcher.js":"6","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/Header.js":"7","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/avatar.js":"8","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/theme.js":"9","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Pages/Browse.js":"10"},{"size":840,"mtime":1627823846726,"results":"11","hashOfConfig":"12"},{"size":4807,"mtime":1627994530259,"results":"13","hashOfConfig":"12"},{"size":5081,"mtime":1627823846730,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1627823846730,"results":"15","hashOfConfig":"12"},{"size":489,"mtime":1627823846726,"results":"16","hashOfConfig":"12"},{"size":617,"mtime":1627823846726,"results":"17","hashOfConfig":"12"},{"size":2431,"mtime":1627995941257,"results":"18","hashOfConfig":"12"},{"size":1739,"mtime":1627995307701,"results":"19","hashOfConfig":"12"},{"size":720,"mtime":1627992949749,"results":"20","hashOfConfig":"12"},{"size":390,"mtime":1627993274608,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"a19j6a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/index.js",[],["47","48"],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/App.js",["49","50","51","52","53","54","55","56"],"import { useState, useEffect, useCallback } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { \n  ChakraProvider,\n  Modal,\n  ModalOverlay,\n  ModalBody,\n  ModalFooter,\n  ModalContent,\n  ModalHeader,\n  Link,\n  Button \n} from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport { Logo } from './Logo';\nimport Header from \"./Components/Header\";\nimport Theme from \"./theme\";\nimport \"@fontsource/inter\";\nimport Web3 from \"web3\";\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\nimport Browse from './Pages/Browse';\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState(undefined);\n  const [ chainId, setChainId ] = useState();\n  const [ isLoading, setIsLoading ] = useState(false);\n\n  const getCurrentAccount = async () => {\n    setIsLoading(true);\n    const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\"});\n    setCurrentAccount(accounts[0]);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    if(window.ethereum && currentAccount){\n      setChainId(window.ethereum.networkVersion);\n      \n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        setCurrentAccount(accounts[0]);\n      })\n\n      window.ethereum.on(\"chainChanged\", (newChainId) => {\n        setChainId(newChainId.substr(-1, 1));\n      })\n    }\n  }, [currentAccount]);\n\n  return (\n    <ChakraProvider theme={Theme}>\n      <Router>\n      <Header currentAccount={currentAccount} />\n      {\n            window.ethereum == undefined ?\n            <Modal\n              isOpen={true}\n              isCentered={true}\n              closeModalOnOverlayClick={false}\n            >\n                <ModalOverlay />\n                <ModalContent>\n                  <ModalHeader>Metamask Not Installed!</ModalHeader>\n                  <ModalBody>\n                      Please Install Metamask.\n                  </ModalBody>\n                  <ModalFooter>\n                      <Link \n                          href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" \n                          isExternal\n                      >\n                          <Button colorScheme=\"blue\" mr={3} rightIcon={<FaExternalLinkAlt />}>\n                              Install On Chrome \n                          </Button>\n                      </Link>\n                      <Link href=\"https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/\" isExternal>\n                          <Button colorScheme=\"orange\" rightIcon={<FaExternalLinkAlt />}>\n                              Install On Firefox \n                          </Button>\n                      </Link>\n                      \n                  </ModalFooter>\n              </ModalContent>      \n            </Modal>\n            :\n            <>\n              {\n                currentAccount == undefined ?\n                <Modal\n                  isOpen={true}\n                  isCentered={true}\n                  closeModalOnOverlayClick={false}\n                >\n                  <ModalOverlay />\n                  <ModalContent>\n                    <ModalHeader textAlign=\"center\">Connect Wallet to continue</ModalHeader>\n                    <ModalFooter justifyContent=\"center\">\n                        <Button className=\"connect\" onClick={getCurrentAccount} isLoading={isLoading} colorScheme=\"yellow\" mr={3}>\n                            Connect Wallet\n                        </Button>                      \n                    </ModalFooter>\n                  </ModalContent>\n                  \n                </Modal>\n                :\n                chainId == \"4\" || chainId == undefined ?\n                null\n                :\n                <Modal\n                  isOpen={true}\n                  isCentered={true}\n                  closeModalOnOverlayClick={false}\n                >\n                  <ModalOverlay />\n                  <ModalContent>\n                    <ModalHeader>Network Not Supported</ModalHeader>\n                    <ModalBody>\n                        Please Switch to Rinkeby Network.\n                    </ModalBody>\n                    <ModalFooter>                        \n                    </ModalFooter>\n                </ModalContent>      \n              </Modal>\n              }\n            </>\n          }\n          <Switch>\n            {/* <Route exact path=\"/NFT\"> */}\n              {/* <HomeScreen currentAccount={currentAccount} /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/dashboard\">\n              <Dashboard currentAccount={currentAccount} />\n            </Route> */}\n            <Route exact path=\"/\">\n              <Browse />\n            </Route>\n          </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/serviceWorker.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/reportWebVitals.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Logo.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/ColorModeSwitcher.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/Header.js",["57","58","59"],"import \"./Components.css\";\nimport celogram from '../assets/celo.svg';\nimport { \n  Button, \n  HStack, \n  Text, \n  Tag, \n  TagLabel, \n  Avatar,\n  Spacer \n} from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport svgAvatarGenerator from \"../utils/avatar\";\nimport { Link } from \"react-router-dom\";\nimport Web3 from \"web3\";\n\nfunction Header({ currentAccount }) {\n\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [ avatar, setAvatar ] = useState(undefined);\n  const [ isMetamaskInstalled, setIsMetamaskInstalled ] = useState(false);\n\n  useEffect(() => {\n    if(window.ethereum) {\n      setIsMetamaskInstalled(true);  \n      let svg = svgAvatarGenerator(currentAccount, {dataUri: true});\n      setAvatar(svg);\n    //   const web3 = new Web3(window.ethereum);\n    //   window.ethereum.on(\"chainChanged\", async (chainId) => {\n    //     const newChainId = await web3.eth.getChainId();\n    //     chainIdSetter(newChainId);\n    //   });\n    } else {\n      setIsMetamaskInstalled(false);\n    }\n  }, [currentAccount])\n\n  \n\n  return (\n    <HStack padding={3} className=\"Header\">\n      <div className=\"headercomp\">\n        <Link to=\"/\"><img className=\"headerlogo\" src={celogram} alt=\"CeloGram Logo\"></img></Link>\n      </div>\n      <Link to=\"/dashboard\"><Button colorScheme=\"whatsapp\" variant=\"ghost\" className=\"buttonComp1\">Dashboard</Button></Link>\n      <Spacer />\n      <Link to=\"/NFT\"><Button colorScheme=\"whatsapp\" variant=\"solid\" className=\"buttonComp\">CELOGRAM NFT</Button></Link>\n      <div className=\"headercomp\">\n        {\n          isMetamaskInstalled ? \n          currentAccount ? \n          <Tag\n            size=\"lg\"\n            borderRadius=\"full\"\n            ml={3}\n            mr={-2}\n            background=\"#FEE09D\"\n          >\n            <TagLabel color=\"#2E3337\">\n                {`${currentAccount.substr(0,6)}...${currentAccount.substr(-4)}`}\n            </TagLabel>\n            <Avatar borderStyle=\"solid\" borderColor=\"#37CE81\" borderWidth=\"2px\" padding=\"1px\" mr=\"-13px\" ml={4} size=\"sm\" bg=\"transparent\" src={avatar} />\n          </Tag>\n          :\n          <Tag alignSelf=\"flex-start\" color=\"#37CE81\" backgroundColor=\"#2e3337\">Connect Wallet</Tag>\n          :\n          <Button isLoading={isLoading} alignSelf=\"flex-start\" color=\"#E6017A\" backgroundColor=\"rgba(230,1,122,0.08)\">Install Metamask</Button>\n        }\n        \n      </div>\n    </HStack>\n  );\n}\n\nexport default Header;","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/avatar.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/theme.js",["60"],"import { extendTheme, withDefaultColorScheme } from \"@chakra-ui/react\";\n\nconst Theme = extendTheme({ \n    fonts: {\n        heading: \"Inter\",\n        body: \"Inter\"\n    },\n    components: {\n        Text: {\n            baseStyle: {\n                fontWeight: \"semibold\",\n                fontFamily: \"Inter\"\n            }\n        },\n        Tag: {\n            baseStyle: {\n                background: \"rgba(230,1,122,0.08)\",\n                color: \"#E6017A\"\n            }\n        },\n        Button: {\n            baseStyle: {\n                fontFamily: \"Inter\"\n            }\n        },\n        Heading: {\n            baseStyle: {\n                fontFamily: \"Inter\"\n            }\n        }\n    }\n});\n\nexport default Theme;","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Pages/Browse.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import { useState, useEffect, useCallback } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { \n  ChakraProvider,\n  Modal,\n  ModalOverlay,\n  ModalBody,\n  ModalFooter,\n  ModalContent,\n  ModalHeader,\n  Link,\n  Button \n} from \"@chakra-ui/react\";\n\n\nfunction Browse() {\n\n\n  return (\n    <div>Hello Browse page!</div>\n  );\n}\n\nexport default Browse;\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":31,"nodeType":"82","messageId":"83","endLine":1,"endColumn":42},{"ruleId":"80","severity":1,"message":"84","line":14,"column":10,"nodeType":"82","messageId":"83","endLine":14,"endColumn":27},{"ruleId":"80","severity":1,"message":"85","line":15,"column":10,"nodeType":"82","messageId":"83","endLine":15,"endColumn":14},{"ruleId":"80","severity":1,"message":"86","line":19,"column":8,"nodeType":"82","messageId":"83","endLine":19,"endColumn":12},{"ruleId":"87","severity":1,"message":"88","line":55,"column":29,"nodeType":"89","messageId":"90","endLine":55,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":88,"column":32,"nodeType":"89","messageId":"90","endLine":88,"endColumn":34},{"ruleId":"87","severity":1,"message":"88","line":106,"column":25,"nodeType":"89","messageId":"90","endLine":106,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":106,"column":43,"nodeType":"89","messageId":"90","endLine":106,"endColumn":45},{"ruleId":"80","severity":1,"message":"91","line":6,"column":3,"nodeType":"82","messageId":"83","endLine":6,"endColumn":7},{"ruleId":"80","severity":1,"message":"86","line":15,"column":8,"nodeType":"82","messageId":"83","endLine":15,"endColumn":12},{"ruleId":"80","severity":1,"message":"92","line":19,"column":22,"nodeType":"82","messageId":"83","endLine":19,"endColumn":34},{"ruleId":"80","severity":1,"message":"93","line":1,"column":23,"nodeType":"82","messageId":"83","endLine":1,"endColumn":45},{"ruleId":"80","severity":1,"message":"94","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":18},{"ruleId":"80","severity":1,"message":"95","line":1,"column":20,"nodeType":"82","messageId":"83","endLine":1,"endColumn":29},{"ruleId":"80","severity":1,"message":"81","line":1,"column":31,"nodeType":"82","messageId":"83","endLine":1,"endColumn":42},{"ruleId":"80","severity":1,"message":"96","line":2,"column":27,"nodeType":"82","messageId":"83","endLine":2,"endColumn":33},{"ruleId":"80","severity":1,"message":"97","line":2,"column":35,"nodeType":"82","messageId":"83","endLine":2,"endColumn":41},{"ruleId":"80","severity":1,"message":"98","line":2,"column":43,"nodeType":"82","messageId":"83","endLine":2,"endColumn":48},{"ruleId":"80","severity":1,"message":"99","line":4,"column":3,"nodeType":"82","messageId":"83","endLine":4,"endColumn":17},{"ruleId":"80","severity":1,"message":"100","line":5,"column":3,"nodeType":"82","messageId":"83","endLine":5,"endColumn":8},{"ruleId":"80","severity":1,"message":"101","line":6,"column":3,"nodeType":"82","messageId":"83","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"102","line":7,"column":3,"nodeType":"82","messageId":"83","endLine":7,"endColumn":12},{"ruleId":"80","severity":1,"message":"103","line":8,"column":3,"nodeType":"82","messageId":"83","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"104","line":9,"column":3,"nodeType":"82","messageId":"83","endLine":9,"endColumn":15},{"ruleId":"80","severity":1,"message":"105","line":10,"column":3,"nodeType":"82","messageId":"83","endLine":10,"endColumn":14},{"ruleId":"80","severity":1,"message":"106","line":11,"column":3,"nodeType":"82","messageId":"83","endLine":11,"endColumn":7},{"ruleId":"80","severity":1,"message":"107","line":12,"column":3,"nodeType":"82","messageId":"83","endLine":12,"endColumn":9},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'ColorModeSwitcher' is defined but never used.","'Logo' is defined but never used.","'Web3' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Text' is defined but never used.","'setIsLoading' is assigned a value but never used.","'withDefaultColorScheme' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'ChakraProvider' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]