[{"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/index.js":"1","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/App.js":"2","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/serviceWorker.js":"3","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/reportWebVitals.js":"4","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Logo.js":"5","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/ColorModeSwitcher.js":"6","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/Header.js":"7","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/avatar.js":"8","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/theme.js":"9","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Pages/Browse.js":"10","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/ChatInterface.js":"11","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/ipfs.js":"12","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/UploadForm.js":"13","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/DisplayImage.js":"14","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Pages/NFTMarketPlace.js":"15","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/config.js":"16","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/Home.js":"17","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/create-item.js":"18"},{"size":840,"mtime":1627823846726,"results":"19","hashOfConfig":"20"},{"size":7848,"mtime":1629355968758,"results":"21","hashOfConfig":"20"},{"size":5081,"mtime":1627823846730,"results":"22","hashOfConfig":"20"},{"size":362,"mtime":1627823846730,"results":"23","hashOfConfig":"20"},{"size":489,"mtime":1627823846726,"results":"24","hashOfConfig":"20"},{"size":617,"mtime":1627823846726,"results":"25","hashOfConfig":"20"},{"size":2422,"mtime":1629266139096,"results":"26","hashOfConfig":"20"},{"size":1739,"mtime":1627995307701,"results":"27","hashOfConfig":"20"},{"size":720,"mtime":1627992949749,"results":"28","hashOfConfig":"20"},{"size":7333,"mtime":1629146312930,"results":"29","hashOfConfig":"20"},{"size":7194,"mtime":1629122574456,"results":"30","hashOfConfig":"20"},{"size":767,"mtime":1628363911044,"results":"31","hashOfConfig":"32"},{"size":7582,"mtime":1629636487996,"results":"33","hashOfConfig":"20"},{"size":10602,"mtime":1629616469311,"results":"34","hashOfConfig":"20"},{"size":3771,"mtime":1629635652182,"results":"35","hashOfConfig":"20"},{"size":147,"mtime":1629625422090,"results":"36","hashOfConfig":"20"},{"size":7355,"mtime":1629635217202,"results":"37","hashOfConfig":"20"},{"size":5549,"mtime":1629638086562,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"o59z12",{"filePath":"42","messages":"43","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},"a19j6a",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/index.js",[],["84","85"],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/App.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import { useState, useEffect, useCallback } from \"react\";\nimport FundPostABI from './abis/FundPost.json'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { \n  ChakraProvider,\n  Modal,\n  ModalOverlay,\n  ModalBody,\n  ModalFooter,\n  ModalContent,\n  ModalHeader,\n  Link,\n  Button \n} from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport { Logo } from './Logo';\nimport Header from \"./Components/Header\";\nimport Theme from \"./theme\";\nimport \"@fontsource/inter\";\nimport Web3 from \"web3\";\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\nimport Browse from './Pages/Browse';\nimport NFTMarketPlaceHeader from \"./Pages/NFTMarketPlace\";\nconst ContractKit = require(\"@celo/contractkit\")\n// const { create } = require('ipfs-http-client')\nlet kit\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'localhost', port: '5001', protocol: 'http' })\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState(undefined);\n  const [ chainId, setChainId ] = useState();\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [FundPost, setFundPost] = useState(null);\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [images, setImages] = useState([]);\n  const [Buffer, setBuffer] = useState(undefined);\n\n  const getCurrentAccount = async () => {\n    setIsLoading(true);\n    await window.celo.enable()\n    const web3 = new Web3(window.celo)\n    kit = ContractKit.newKitFromWeb3(web3)\n    const accounts = await await kit.web3.eth.getAccounts();\n    setCurrentAccount(accounts[0]);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    if(window.celo && currentAccount){\n      setChainId(window.celo.networkVersion);\n      // init();\n      \n      window.celo.on(\"accountsChanged\", (accounts) => {\n        setCurrentAccount(accounts[0]);\n      })\n\n      window.celo.on(\"chainChanged\", (newChainId) => {\n        setChainId(newChainId.substr(-1, 1));\n      })\n    }\n  }, [currentAccount]);\n\n//   const init = async () => {\n//     const web3 = new Web3(window.celo);\n//     kit = ContractKit.newKitFromWeb3(web3);\n//     const networkId = await kit.web3.eth.net.getId();\n//     const networkData = FundPostABI.networks[networkId];\n//     let FundPostContractObj = new web3.eth.Contract(FundPostABI.abi, networkData.address);\n//     setFundPost(FundPostContractObj);\n// }\n\n  const sortView = () => {\n    // this.setState({\n\n    // })\n    const sorted = [...images].sort((a,b) => {\n      return b.tipAmount - a.tipAmount\n    })\n    setImages(sorted)\n    // this.setState({ loading: false})\n    setIsLoading(false)\n  }\n\n  const unsortView = () => {\n    // this.setState({\n    const sortedReverse = [...images].reverse();\n    setImages(sortedReverse)\n    // this.setState({ loading: false})\n    setIsLoading(false)\n  }\n\n  const captureFile = event => {\n\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      const buffer = Buffer(reader.result)\n      setBuffer(buffer)\n      // this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', Buffer)\n    }\n  }\n\n  const uploadImage = (description) => {\n    if (currentAccount !== undefined) {\n      console.log(\"Submitting file to ipfs...\");\n      ipfs.add(Buffer, (error, result) => {\n        console.log(\"Ipfs result\", result);\n        if (error) {\n          console.error(error);\n          return;\n        }\n        // this.setState({ loading: true });\n        setIsLoading(true);\n        FundPost.methods\n          .uploadImage(result[0].hash, description)\n          .send({ from: currentAccount })\n          .on(\"transactionHash\", (hash) => {\n            // this.setState({ isLoading: false });\n            setIsLoading(false)\n          });\n        if (isLoading) {\n          window.location.reload();\n        }\n      });\n    } else {\n      window.alert(\"Please connect your Celo Wallet to upload!\");\n    }\n  };\n\n  const tipImageOwner = (id, tipAmount) => {\n    \n    setIsLoading(true)\n    FundPost.methods.tipImageOwner(id).send({ from: currentAccount, value: tipAmount }).on('transactionHash', (hash) => {\n      \n      setIsLoading(false)\n    })\n  }\n\n  const setselectedImg = (url) => {\n    setSelectedImg(url)\n  }\n\n  return (\n    <ChakraProvider theme={Theme}>\n      <Router>\n      <Header currentAccount={currentAccount} />\n      {\n            window.celo == undefined ?\n            <Modal\n              isOpen={true}\n              isCentered={true}\n              closeModalOnOverlayClick={false}\n            >\n                <ModalOverlay />\n                <ModalContent>\n                  <ModalHeader>Celo Extension Wallet Not Installed!</ModalHeader>\n                  <ModalBody>\n                      Please Install Celo Extension Wallet.\n                  </ModalBody>\n                  <ModalFooter>\n                      <Link \n                          href=\"https://chrome.google.com/webstore/detail/celoextensionwallet/kkilomkmpmkbdnfelcpgckmpcaemjcdh?hl=en\" \n                          isExternal\n                      >\n                          <Button colorScheme=\"blue\" mr={3} rightIcon={<FaExternalLinkAlt />}>\n                              Install On Chrome \n                          </Button>\n                      </Link>                      \n                  </ModalFooter>\n              </ModalContent>      \n            </Modal>\n            :\n            <>\n              {\n                currentAccount == undefined ?\n                <Modal\n                  isOpen={true}\n                  isCentered={true}\n                  closeModalOnOverlayClick={false}\n                >\n                  <ModalOverlay />\n                  <ModalContent>\n                    <ModalHeader textAlign=\"center\">Connect Celo Extension Wallet to continue</ModalHeader>\n                    <ModalFooter justifyContent=\"center\">\n                        <Button className=\"connect\" onClick={getCurrentAccount} isLoading={isLoading} colorScheme=\"yellow\" mr={3}>\n                            Connect Celo Extension Wallet\n                        </Button>                      \n                    </ModalFooter>\n                  </ModalContent>\n                  \n                </Modal>\n                :\n                chainId == \"44787\" || chainId == undefined ?\n                null\n                :\n                <Modal\n                  isOpen={true}\n                  isCentered={true}\n                  closeModalOnOverlayClick={false}\n                >\n                  <ModalOverlay />\n                  <ModalContent>\n                    <ModalHeader>Network Not Supported</ModalHeader>\n                    <ModalBody>\n                        Please Switch to Alfajores Test Network.\n                    </ModalBody>\n                    <ModalFooter>                        \n                    </ModalFooter>\n                </ModalContent>      \n              </Modal>\n              }\n            </>\n          }\n          <Switch>\n            <Route exact path=\"/\">\n              <Browse\n                currentAccount={currentAccount}\n                // captureFile={captureFile}\n                // uploadImage={uploadImage}\n                // images={images}\n                // tipImageOwner={tipImageOwner}\n                // setselectedImg={setselectedImg}\n                // selectedImg={selectedImg}\n                // unsortView={unsortView}\n                // sortView={sortView}\n                \n              />\n            </Route>\n            <Route exact path=\"/marketplace\">\n              <NFTMarketPlaceHeader\n                currentAccount={currentAccount}                \n              />\n            </Route>\n          </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/serviceWorker.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/reportWebVitals.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Logo.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/ColorModeSwitcher.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/Header.js",["102","103"],"import \"./Components.css\";\nimport celogram from '../assets/celo.svg';\nimport { \n  Button, \n  HStack, \n  Tag, \n  TagLabel, \n  Avatar,\n  Spacer \n} from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport svgAvatarGenerator from \"../utils/avatar\";\nimport { Link } from \"react-router-dom\";\nimport Web3 from \"web3\";\n\nfunction Header({ currentAccount }) {\n\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [ avatar, setAvatar ] = useState(undefined);\n  const [ isMetamaskInstalled, setIsMetamaskInstalled ] = useState(false);\n\n  useEffect(() => {\n    if(window.celo) {\n      setIsMetamaskInstalled(true);  \n      let svg = svgAvatarGenerator(currentAccount, {dataUri: true});\n      setAvatar(svg);\n    //   const web3 = new Web3(window.celo);\n    //   window.celo.on(\"chainChanged\", async (chainId) => {\n    //     const newChainId = await web3.eth.getChainId();\n    //     chainIdSetter(newChainId);\n    //   });\n    } else {\n      setIsMetamaskInstalled(false);\n    }\n  }, [currentAccount])\n\n  \n\n  return (\n    <HStack padding={3} className=\"Header\">\n      <div className=\"headercomp\">\n        <Link to=\"/\"><img className=\"headerlogo\" src={celogram} alt=\"CeloGram Logo\"></img></Link>\n      </div>\n      <Link to=\"/fundraisers\"><Button colorScheme=\"whatsapp\" variant=\"ghost\" className=\"buttonComp1\">Fundraisers</Button></Link>\n      <Spacer />\n      <Link to=\"/marketplace\"><Button colorScheme=\"whatsapp\" variant=\"solid\" className=\"buttonComp\">CELOGRAM NFT</Button></Link>\n      <div className=\"headercomp\">\n        {\n          isMetamaskInstalled ? \n          currentAccount ? \n          <Tag\n            size=\"lg\"\n            borderRadius=\"full\"\n            ml={3}\n            mr={-2}\n            background=\"#FEE09D\"\n          >\n            <TagLabel color=\"#2E3337\">\n                {`${currentAccount.substr(0,6)}...${currentAccount.substr(-4)}`}\n            </TagLabel>\n            <Avatar borderStyle=\"solid\" borderColor=\"#37CE81\" borderWidth=\"2px\" padding=\"1px\" mr=\"-13px\" ml={4} size=\"sm\" bg=\"transparent\" src={avatar} />\n          </Tag>\n          :\n          <Tag alignSelf=\"flex-start\" color=\"#37CE81\" backgroundColor=\"#2e3337\">Connect Wallet</Tag>\n          :\n          <Button isLoading={isLoading} alignSelf=\"flex-start\" color=\"#E6017A\" backgroundColor=\"rgba(230,1,122,0.08)\">Install Metamask</Button>\n        }\n        \n      </div>\n    </HStack>\n  );\n}\n\nexport default Header;","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/avatar.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/theme.js",["104"],"import { extendTheme, withDefaultColorScheme } from \"@chakra-ui/react\";\n\nconst Theme = extendTheme({ \n    fonts: {\n        heading: \"Inter\",\n        body: \"Inter\"\n    },\n    components: {\n        Text: {\n            baseStyle: {\n                fontWeight: \"semibold\",\n                fontFamily: \"Inter\"\n            }\n        },\n        Tag: {\n            baseStyle: {\n                background: \"rgba(230,1,122,0.08)\",\n                color: \"#E6017A\"\n            }\n        },\n        Button: {\n            baseStyle: {\n                fontFamily: \"Inter\"\n            }\n        },\n        Heading: {\n            baseStyle: {\n                fontFamily: \"Inter\"\n            }\n        }\n    }\n});\n\nexport default Theme;","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Pages/Browse.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import './Browse.css'\nimport {\n  Button,\n  Heading,\n  VStack,\n  HStack,\n  Box,\n  Flex,\n  Spacer,\n  Image,\n  Tag,\n  Text,\n  Avatar,\n  Skeleton,\n  SkeletonCircle,\n  Stack,\n} from '@chakra-ui/react'\nimport { create } from \"ipfs-http-client\";\nimport ChatInterface from '../Components/ChatInterface.js'\nimport { useState, useEffect, useReducer } from 'react'\n// import publicLockABI from '../abis/publicLock'\nimport Web3 from 'web3'\n// import { Framework } from '@superfluid-finance/js-sdk'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { useToast } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\n// import { getClient, queryThread } from '../utils/textile'\n// import { Where } from '@textile/hub-threads-client'\nimport svgAvatarGenerator from '../utils/avatar'\n// import OrbitDB from \"orbit-db\";\nimport Upload from \"../Components/UploadForm\"\n\nvar sf\nvar LockContract\nvar web3\n\n// const ipfsOptions = {\n//   EXPERIMENTAL: {\n//     pubsub: true\n//   },\n//   repo: './ipfs'\n// }\n\n// http://5a40bd7bdcaf.ngrok.io\n// const ipfs = create(\"http://5a40bd7bdcaf.ngrok.io\", ipfsOptions);\n\n\n// const ACTIONS = {\n//   SET_LOCK_ADDRESS: 'set-lock-address',\n//   SET_BLOCK_NUMBER: 'set-block-number',\n//   SET_SENDER: 'set-sender',\n//   SET_VIDEO: 'set-video',\n//   SET_IS_LOCKED: 'set-is-locked',\n// }\n\n// function stateReducer(state, action) {\n//   switch (action.type) {\n//     case ACTIONS.SET_LOCK_ADDRESS:\n//       return { ...state, lockAddress: action.payload }\n//     case ACTIONS.SET_BLOCK_NUMBER:\n//       return { ...state, blockNumber: action.payload }\n//     case ACTIONS.SET_SENDER:\n//       return { ...state, sender: action.payload }\n//     case ACTIONS.SET_VIDEO:\n//       return { ...state, video: action.payload }\n//     case ACTIONS.SET_IS_LOCKED:\n//       return { ...state, isLocked: action.payload }\n//     default:\n//       return state\n//   }\n// }\n\nexport default function Browse({ currentAccount }) {\n  // const [isStartingFlow, setIsStartingFlow] = useState(false)\n  const [isPageLoading, setIsPageLoading] = useState(true)\n  const [ avatar, setAvatar ] = useState(undefined);\n  const toast = useToast();\n  const { id } = useParams();\n  const [ isLocked, setIsLocked ] = useState(true);\n  const [ lockAddress, setLockAddress ] = useState(\"\");\n  const [ blockNumber, setBlockNumber ] = useState();\n  const [ sender, setSender ] = useState();\n  const [ web3, setWeb3 ] = useState();\n  const [ topic, setTopic ] = useState(\"\");\n  const [ db, setdb ] = useState();\n  const [ fundraiseId, setFundraiseId ] = useState();\n  \n  useEffect(async () => {\n    // var loadScript = function (src) {\n    //   var tag = document.createElement('script');\n    //   tag.async = false;\n    //   tag.src = src;\n    //   var body = document.getElementsByTagName('body')[0];\n    //   body.appendChild(tag);\n    // }\n\n    let svg = svgAvatarGenerator(currentAccount, {dataUri: true});\n    setAvatar(svg);\n\n    \n\n    // loadScript(\"https://niftysubs.github.io/fundraising-widget/main.js\");\n\n    // const orbitdb = await OrbitDB.createInstance(ipfs);\n    // let db = await orbitdb.docs(\"/orbitdb/zdpuAz6e2rGQ917hroubfJuazTQDTHdvDPhm7QhKkMiu64SD7/videosdb\");\n    // await db.load();\n    // setdb(db);\n    // let transmission = await db.query((docs) => docs._id == id);\n    // console.log(transmission);\n    // setTopic(transmission[0].pubsubTopic);\n    // setLockAddress(transmission[0].lockAddress);\n  }, []);\n\n  useEffect(() => {\n    if(currentAccount) {\n      init();\n    }\n  },[currentAccount])\n\n\n  const init = async () => {\n    let web3 = new Web3(window.celo);\n    setWeb3(web3);\n  }\n\n    // let fundraises = await FundraisingContract.methods.getFundraises(currentAccount).call();\n    // console.log(fundraises);\n    // setFundraiseId(fundraises[fundraises.length - 1]);\n    // changeFlowSender(currentAccount);\n  // }\n\n  return (\n    <div className=\"HomeScreen\">\n      <HStack spacing={0} className=\"MainSectionHome\">\n        <section className=\"sidepanel\">\n          {/* <br /> */}\n          <Heading as=\"h4\" fontSize={15} className=\"sidepaneltitle\">\n            Creators for you\n          </Heading>\n          <div className=\"descrip\">\n          <b className=\"bolddesc\">CeloGram</b> is the place to share Photos and Videos with fellow creators on Celo. Connect with others, Mint/Shop NFTs and donate to Good Causes.\n          </div>\n          <VStack\n            marginTop={3}\n            alignContent=\"flex-start\"\n            spacing={3}\n            className=\"artists\"\n          >\n            <HStack className=\"artist\">\n              <VStack alignItems=\"flex-start\" alignContent=\"flex-start\">\n                <Text className=\"artistname\">Cristiano Ronaldo</Text>\n                <div className=\"tagcase\">\n                <Tag className=\"tag\" backgroundColor=\"#3CB371\" color=\"#FEE09D\">\n                  Football\n                </Tag>\n                <Tag className=\"tag\" backgroundColor=\"#3CB371\" color=\"#FEE09D\">\n                  Juventus\n                </Tag>\n                </div>\n              </VStack>\n              <div className=\"watchcount\">🍩 406.44M</div>\n            </HStack>\n            <HStack className=\"artist\">\n              <VStack alignItems=\"flex-start\" alignContent=\"flex-start\">\n                <Text className=\"artistname\">The Rock</Text>\n                <div className=\"tagcase\">\n                <Tag className=\"tag\" backgroundColor=\"#3CB371\" color=\"#FEE09D\">\n                  Hollywood\n                </Tag>\n                <Tag className=\"tag\" backgroundColor=\"#3CB371\" color=\"#FEE09D\">\n                  WWE\n                </Tag>\n                </div>\n              </VStack>\n              <div className=\"watchcount\">🍩 309M</div>\n            </HStack>\n            <HStack className=\"artist\">\n              <VStack alignItems=\"flex-start\" alignContent=\"flex-start\">\n                <Text className=\"artistname\">Vitalik Buterin</Text>\n                <div className=\"tagcase\">\n                <Tag className=\"tag\" backgroundColor=\"#3CB371\" color=\"#FEE09D\">\n                  Ethereum\n                </Tag>\n                <Tag className=\"tag\" backgroundColor=\"#3CB371\" color=\"#FEE09D\">\n                  EIP 1559\n                </Tag>\n                </div>\n              </VStack>\n              <div className=\"watchcount\">🍩 10.7M</div>\n            </HStack>\n          </VStack>\n          <div className=\"showmore\">Show More</div>\n          <VStack spacing={3} className=\"joincard\">\n            <Heading className=\"cardtitle\">\n              Join the <span className=\"titlecardhighlight\">CELOGram</span>{' '}\n              community!\n            </Heading>\n            <Heading as=\"h5\" fontSize={13} className=\"cardsubtitle\">\n              Discover the best Creators on Celo and Lead a Creator Economy\n            </Heading>\n          </VStack>\n        </section>\n        <HStack\n          width=\"80vw\"\n          alignItems=\"flex-start\"\n          backgroundColor=\"#EFEFF1\"\n          height=\"100%\"\n          className=\"mainsection\"\n        >\n          <Upload\n            currentAccount={currentAccount}\n          />\n        </HStack>\n          \n        <HStack> \n        <ChatInterface \n          pubsubTopic={topic}\n          // isLocked={isLocked}\n          currentAccount={currentAccount}\n        />\n        </HStack>\n      </HStack>\n    </div>\n  )\n}","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/ChatInterface.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import { VStack, Input, HStack, Text, Button, Box, Tag, Avatar, Flex, Image, useToast, FormControl, Form } from \"@chakra-ui/react\";\nimport seedColor from \"seed-color\";\nimport OrbitDb, { Identities } from \"orbit-db\";\nimport { create } from \"ipfs-http-client\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState, useEffect } from \"react\";\nimport IPFSpubsub from \"orbit-db-pubsub\";\nimport svgAvatarGenerator from \"../utils/avatar\";\nimport Web3 from \"web3\";\n// import SuperchatABI from \"../abis/superChat\";\n\n\nvar orbitdb;\nvar db;\nvar pubsub;\nvar web3;\n\nfunction ChatInterface({ currentAccount, isLocked, pubsubTopic }) {\n    const toast = useToast();\n    const [isConnectingToDatabase, setIsConnectingToDatabase ] = useState(false);\n    const [ isStreaming, setIsStreaming ] = useState(false);\n    const [ message, setMessage ] = useState(\"\");\n    const [ messages, setMessages ] = useState([]);\n    const [ superchatContractAddress, setSuperchatContractAddress ] = useState(\"0xE85b157E7685Ce6Bc35fd33c1dfb7E887E7470AF\");\n    const [ superchatContract, setSuperchatContract ] = useState(\"\");\n    const [ isSuperChatting, setIsSuperChatting ] = useState(false);\n    const [ superChatValue, setSuperChatValue ] = useState(\"0\");\n\n    useEffect(() => {\n        \n    }, []);\n    \n    useEffect(() => {\n        if(currentAccount)\n            init();\n    }, [currentAccount]);\n\n    useEffect(() => {\n\n    }, [messages, isLocked]);\n\n    const init = async () => {\n        web3 = new Web3(window.celo);\n        // let superchatContractObj = new web3.eth.Contract(SuperchatABI, superchatContractAddress);\n        // setSuperchatContract(superchatContractObj);\n        \n        // const ipfs = create(\"http://5a40bd7bdcaf.ngrok.io\");\n        // orbitdb = await OrbitDb.createInstance(ipfs);\n        // db = await orbitdb.docs(\"niftysubs\");\n        // pubsub = new IPFSpubsub(ipfs, \"niftysubs\");\n        // subscribeToTopic();\n        // initDb();\n    } \n\n    const subscribeToTopic = async () => {\n        await pubsub.subscribe(pubsubTopic, handleMessage, handleNewPeer);\n        console.log(`Subscribed to ${pubsubTopic}`);\n    }\n\n    const handleMessage = (topic, message) => {\n        // let newMessage = {_id: uuidv4(), sender: currentAccount, message: message};\n        setMessages(messages => [...messages, message]);\n        // console.log(message);\n    }\n\n    const handleNewPeer = (address, peer) => {\n       \n    }\n    const handleChange = ({ target }) => {\n        setMessage(target.value);\n    }\n\n    const initDb = async () => {\n        db.load();\n        const prevMessages = await db.get(\"\");\n        setMessages(messages => [...messages, ...prevMessages]);\n        console.log(db);\n        db.events.on(\"ready\", () => {\n            console.log(\"Database Ready!\");\n        });\n        db.events.on(\"write\", (address, entry, heads) => {\n            console.log(heads);\n            let newMessage = { _id: heads[0].payload.value._id, sender: heads[0].payload.value.sender, message: heads[0].payload.value.message };  \n            setMessages(messages => [...messages, newMessage]);\n            console.log(\"write event\");\n        });\n        db.events.on(\"peer\", (peer) => {\n            console.log(`Hello ${peer}`);\n        });\n    }\n\n\n    const handleSuperChatValue = ({ target }) => {\n        setSuperChatValue(target.value);\n    }\n\n    const sendMessage = async () => {\n        let newMessage = await pubsub.publish(pubsubTopic, { _id: uuidv4(), message: message, sender: currentAccount, isSuperChat: false, value: 0 });\n        setMessage(\"\");\n    }\n\n    const sendSuperChat = async () => {\n        if(parseFloat(superChatValue) > 0) {\n            setIsSuperChatting(true);\n            console.log(superChatValue);\n            let weiAmount = web3.utils.toWei(superChatValue, \"ether\");\n            superchatContract.methods.superChat(\"0x22b2DD2CFEF2018D15543c484aceF6D9B5435863\", weiAmount, message, uuidv4()).send({ from: currentAccount, value: weiAmount })\n            .on(\"transactionHash\", (hash) => {\n                console.log(hash);\n                sendSuperChatMessage(message, superChatValue);\n                setIsSuperChatting(false);\n            })\n            .on(\"error\", (error, receipt) => {\n                toast({\n                    position: \"bottom-right\",\n                    title: `Request Rejected`,\n                    status: \"error\",\n                    isClosable: true\n                })\n                setIsSuperChatting(false);\n            })\n        } else {\n            toast({\n                position: \"bottom-right\",\n                title: `SuperChat value is 0`,\n                status: \"error\",\n                isClosable: true\n            })\n        }\n    }\n\n    const sendSuperChatMessage = async (message, value) => {\n        let newMessage = await pubsub.publish(pubsubTopic, { _id: uuidv4(), message: message, sender: currentAccount, isSuperChat: true, value: superChatValue });\n        setMessage(\"\");\n        setSuperChatValue(0);\n        setIsSuperChatting(false);\n    }\n\n    return (\n        <VStack borderLeftWidth=\"4px\" borderLeftColor=\"#FEE09D\" margin={0} spacing={4} height=\"calc(100vh - 65px)\"backgroundColor=\"#1F1F23\" padding={3} alignItems=\"flex-start\" width=\"20vw\">\n            <VStack alignItems=\"flex-start\"  width=\"100%\">\n                <Text fontSize=\"20px\" color=\"#3CB371\">Chat</Text>\n                <VStack width=\"100%\" justifyContent=\"flex-end\" height=\"calc(100vh - 65px - 23vh)\">\n                    <VStack overflowY=\"scroll\" width=\"100%\" alignItems=\"flex-start\" justifySelf=\"flex-end\">\n                        {\n                            messages.length == 0 ?\n                            null\n                            :\n                            messages.map(message => {\n                                return (\n                                    <Box key={message._id} maxWidth=\"18vw\">\n                                        <Text isTruncated color={seedColor(message.sender).toHex()} as=\"i\">{message.sender.substr(0,3)}...{message.sender.substr(-3)}</Text>\n                                        <Text ml=\"10px\" as=\"span\">{message.message}</Text>\n                                    </Box>\n                                );\n                            })\n                        }\n                    </VStack>\n                    \n                </VStack>\n            </VStack>\n                <VStack justifySelf=\"flex-end\" width=\"100%\">\n                    <Input isRequired focusBorderColor=\"#FEE09D\" isRequired={true} marginTop=\"0 !important\" value={message} onChange={handleChange} width=\"100%\" placeholder=\"Send a message\" backgroundColor=\"gray.200\" />\n                    <HStack width=\"100%\">\n                    {/* <Input width=\"100px\" value={superChatValue} focusBorderColor=\"pink.400\" onChange={handleSuperChatValue} /> */}\n                        {/* <Button isLoading={isSuperChatting} onClick={sendSuperChat} colorScheme=\"red\">SuperChat</Button> */}\n                        <Button onClick={sendMessage} backgroundColor=\"#3CB371\" color=\"#fff\">Send</Button>\n                    </HStack>\n                </VStack>            \n        </VStack>\n    );  \n}\n\nexport default ChatInterface;","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/ipfs.js",["169"],"import { create } from \"ipfs-http-client\";\nimport OrbitDB from \"orbit-db\";\nconst auth = 'Basic ' + Buffer.from(process.env.REACT_APP_IPFS_PROJECT_ID + ':' + process.env.REACT_APP_IPFS_PROJECT_SECRET).toString('base64')\n\nconst ipfsOptions = {\n    EXPERIMENTAL: {\n      pubsub: true\n    }\n}\n  \n\nconst ipfsAuthOptions = {\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n\n    }\n}\n\nexport const connectToInfuraIpfs = async () => {\n    const ipfs = await create(\"https://ipfs-api.voodfy.com\", ipfsOptions);\n    return ipfs;\n}\n\nexport const connectToOrbitDb = async (ipfs, databaseUrl) => {\n    const orbitdb = await OrbitDB.createInstance(ipfs);\n    const db = await orbitdb.docs(databaseUrl);\n    return db;\n}",["170","171"],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/UploadForm.js",["172"],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/DisplayImage.js",["173","174","175","176","177","178","179","180","181"],"import React, { useEffect, useState } from 'react';\nimport Web3 from \"web3\";\nimport {\n    Center,\n    VStack,\n    HStack,\n    Image,\n    Skeleton,\n    Box,\n    Stack,\n    Button,\n    Badge,\n    Tag,\n    Avatar,\n    TagLabel\n  } from \"@chakra-ui/react\";\nimport '../Pages/Browse.css'\nimport svgAvatarGenerator from \"../utils/avatar\";\nimport FundPostABI from '../abis/FundPost.json'\nconst ContractKit = require(\"@celo/contractkit\")\nlet kit\nvar FundPostContractObj\n// const ipfs = window.IpfsHttpClient.create({ host: 'ipfs.infura.io', port: '5001', protocol: 'https' });\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'localhost', port: '5001', protocol: 'http' })\n\n\n\nfunction DisplayImage({ currentAccount }) {\n\n    const [tipAm, setTipAm] = useState('2')\n    const [ isMetamaskInstalled, setIsMetamaskInstalled ] = useState(false);\n    const [ avatar, setAvatar ] = useState(undefined);\n    const [selectedImg, setSelectedImg] = useState(null);\n    const [images, setImages] = useState([]);\n    const [ isLoading, setIsLoading ] = useState(false);\n    // const [FundPost, setFundPost] = useState(null);\n    // const [count, setCount] = useState(0)\n\n    \n    useEffect(() => {\n        if(window.celo && currentAccount){\n        //   setChainId(window.celo.networkVersion);\n          init();\n          \n        //   window.celo.on(\"accountsChanged\", (accounts) => {\n        //     setCurrentAccount(accounts[0]);\n        //   })\n    \n        //   window.celo.on(\"chainChanged\", (newChainId) => {\n        //     setChainId(newChainId.substr(-1, 1));\n        //   })\n        }\n      }, [currentAccount]);\n\n      const init = async () => {\n        const web3 = new Web3(window.celo);\n        kit = ContractKit.newKitFromWeb3(web3);\n        const networkId = await kit.web3.eth.net.getId();\n        const networkData = FundPostABI.networks[networkId];\n        console.log(networkData, networkId)\n        if(networkData)\n        {\n        FundPostContractObj = new kit.web3.eth.Contract(FundPostABI.abi, networkData.address);\n        // setFundPost(FundPostContractObj);\n        if(FundPostContractObj){\n        const imagesCount = await FundPostContractObj.methods.imageCount().call()     \n        for(var i = 1; i <= imagesCount; i++){\n            const image = await FundPostContractObj.methods.images(i).call()\n            setImages([...images, image])\n            console.log(images)\n        }\n    return images\n    }\n        }else {\n            window.alert('Contract not deployed to Alfajores TestNetwork')\n        }\n    }\n    const sortView = () => {\n        const sorted = [...images].sort((a,b) => {\n          return b.tipAmount - a.tipAmount\n        })\n        setImages(sorted)\n        // this.setState({ loading: false})\n        setIsLoading(false)\n    }\n    \n    const unsortView = () => {\n        const sortedReverse = [...images].reverse();\n        setImages(sortedReverse)\n        setIsLoading(false)\n    }\n    \n    const setTipAmount = (e) => {\n        setTipAm(e.target.value)\n    };\n    const tipImageOwner = (id, tipAmount) => {\n        setIsLoading(true)\n        FundPostContractObj.methods.tipImageOwner(id).send({ from: currentAccount, value: tipAmount }).on('transactionHash', (hash) => {\n        setIsLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        if(window.celo && currentAccount){\n            setIsMetamaskInstalled(true); \n            let svg = svgAvatarGenerator(currentAccount, {dataUri: true});\n            setAvatar(svg);\n        }\n        else{\n            setIsMetamaskInstalled(false);\n        }\n        \n    }, [currentAccount])\n        const property = {\n            imageUrl: \"https://bit.ly/2Z4KKcF\",\n            imageAlt: \"Rear view of modern home with pool\",\n            beds: 3,\n            baths: 2,\n            title: \"Modern home in city center in the heart of historic Los Angeles\",\n            formattedPrice: \"$1,900.00\",\n            reviewCount: 34,\n            rating: 4,\n          }\n        return(\n            <VStack \n                spacing={3}\n                // divider={<Divider borderColor=\"gray.200\" />}\n                width=\"100%\"\n                align=\"stretch\"\n                direction=\"row\"\n                \n                // backgroundColor=\"#1F1F23\"\n                // padding=\"10px\"\n                // borderBottomColor=\"#3CB371\"\n                // borderBottomWidth=\"4px\"\n                >\n                <Stack align=\"center\" colorScheme=\"#FEE09D\">\n                <Button className=\"rankButton\" backgroundColor=\"#3cb371\" size=\"md\" variant=\"ghost\" onClick={() => sortView()}  >\n                    Rank Posts by &nbsp;<span className=\"CELO\"> $CELO</span>\n                </Button>\n                {/* <Button className=\"rankButton\" backgroundColor=\"#3cb371\" size=\"md\" variant=\"ghost\" onClick={() => sortView()}  >\n                    View Unranked\n                </Button> */}\n                </Stack>\n                <VStack align=\"center\" direction=\"row\" spacing={10} overflowY=\"auto\" height=\"575px\">\n                    {/* {currentAccount ?  */}\n                    {images.map((image, key) => {\n                        <Center>\n                        <Box key={key} padding=\"8px\" maxW=\"lg\" borderWidth=\"4px\" borderRadius=\"lg\" borderColor=\"#FEE09D\" overflow=\"hidden\" backgroundColor=\"#3cb371\">\n                            <Box\n                                color=\"gray.500\"\n                                fontWeight=\"semibold\"\n                                letterSpacing=\"wide\"\n                                fontSize=\"xs\"\n                                textTransform=\"uppercase\"\n                                padding=\"5px\"\n                                backgroundColor=\"FEE09D\"\n                                ml=\"2\"\n                            >\n                            <Tag\n                                size=\"lg\"\n                                borderRadius=\"full\"\n                                // ml={3}\n                                // mr={-2}\n                                background=\"#FEE09D\"\n                            >\n                                {/* <TagLabel color=\"#4d8a68\">Posted by {`${currentAccount.substr(0,6)}...${currentAccount.substr(-4)}`} </TagLabel> */}\n                                <TagLabel color=\"#4d8a68\">Posted by {image.author}\n\n                                </TagLabel>\n                                <Avatar borderStyle=\"solid\" borderColor=\"#37CE81\" borderWidth=\"2px\" padding=\"1px\" mr=\"-13px\" ml={4} size=\"sm\" bg=\"transparent\" src={avatar} />\n                            </Tag>\n        \n                            </Box>\n                            <Image borderRadius=\"lg\" src={`https://ipfs.infura.io/ipfs/${image.hash}`} alt={property.imageAlt} />\n        \n                             <Box p=\"6\">\n                                <Box d=\"flex\" alignItems=\"baseline\">\n                                <Badge borderRadius=\"full\" px=\"2\" backgroundColor=\"#FEE09D\">\n                                    DESCRIPTION\n                                </Badge>\n                                <Box\n                                    color=\"white\"\n                                    fontWeight=\"bold\"\n                                    letterSpacing=\"wide\"\n                                    fontSize=\"s\"\n                                    textTransform=\"uppercase\"\n                                    ml=\"2\"\n                                    backgroundColor=\"#4d8a68\"\n                                    borderRadius=\"5px\"\n                                    padding=\"6px\"\n                                >\n                                    {image.description}\n                                </Box>\n                                </Box>\n                            </Box>\n                            <HStack>\n                            <Tag key={key} size=\"lg\" colorScheme=\"teal\" borderRadius=\"full\">\n                                <Avatar\n                                    src=\"https://assets.coingecko.com/coins/images/11090/small/icon-celo-CELO-color-500.png?1592293590\"\n                                    size=\"xs\"\n                                    name=\"cUSD\"\n                                    ml={-1}\n                                    mr={2}\n                                />\n                                <TagLabel color=\"#4d8a68\" >\n                                    {Web3.utils.fromWei(\n                                image.tipAmount.toString(),\n                                \"Ether\"\n                              )}{\" \"}\n                              </TagLabel>\n                            </Tag>\n                            <Stack width=\"40%\" backgroundColor=\"white\" placeholder=\"Media Description\" borderWidth=\"4px\" borderColor=\"#FEE09D\" textColor=\"#3CB371\" >\n                            <input\n                                type=\"text\"\n                                style={{width:\"100px\"}} \n                                className=\"form-control\"\n                                onChange={(e) => setTipAmount(e)}\n                                placeholder=\"cUSD Tip\"\n                                padding=\"5px\"\n                                required />\n                            </Stack>\n                            <Stack width=\"20%\" variant=\"ghost\" backgroundColor=\"#FEE09D\" placeholder=\"Media Description\" borderWidth=\"3px\" borderColor=\"#4d8a68\" textColor=\"#3CB371\" borderRadius=\"5px\" >\n                                <button type=\"submit\"\n                                 name={image.id}\n                                 onClick={(event) => {\n                                    console.log({ tipAm });\n                                    let tipAmount = Web3.utils.toWei(\n                                      tipAm.toString(),\n                                      \"ether\"\n                                    );\n                                    console.log(event.target.name, tipAmount);\n                                    tipImageOwner(\n                                      event.target.name,\n                                      tipAmount\n                                    );\n                                    console.log(tipAmount, tipAm);\n                                  }}\n                                >TIP cUSD</button>\n                            </Stack>\n                            </HStack>\n                            </Box>\n                            </Center>\n\n                    })}\n                    \n\n                    \n                    </VStack>\n\n            </VStack>\n        )\n    // }\n\n\n}\n\nexport default DisplayImage;","/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Pages/NFTMarketPlace.js",["182","183","184","185","186","187","188","189","190","191","192"],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/utils/config.js",[],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/Home.js",["193","194","195","196","197","198","199","200","201","202","203","204"],"/home/develioper/Desktop/Blockchain/Celo-Fellowship'21/celo-gram/my-app/src/Components/create-item.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":31,"nodeType":"229","messageId":"230","endLine":1,"endColumn":42},{"ruleId":"227","severity":1,"message":"231","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":19},{"ruleId":"227","severity":1,"message":"232","line":15,"column":10,"nodeType":"229","messageId":"230","endLine":15,"endColumn":27},{"ruleId":"227","severity":1,"message":"233","line":16,"column":10,"nodeType":"229","messageId":"230","endLine":16,"endColumn":14},{"ruleId":"227","severity":1,"message":"234","line":35,"column":20,"nodeType":"229","messageId":"230","endLine":35,"endColumn":31},{"ruleId":"227","severity":1,"message":"235","line":36,"column":10,"nodeType":"229","messageId":"230","endLine":36,"endColumn":21},{"ruleId":"227","severity":1,"message":"236","line":74,"column":9,"nodeType":"229","messageId":"230","endLine":74,"endColumn":17},{"ruleId":"227","severity":1,"message":"237","line":86,"column":9,"nodeType":"229","messageId":"230","endLine":86,"endColumn":19},{"ruleId":"227","severity":1,"message":"238","line":94,"column":9,"nodeType":"229","messageId":"230","endLine":94,"endColumn":20},{"ruleId":"227","severity":1,"message":"239","line":109,"column":9,"nodeType":"229","messageId":"230","endLine":109,"endColumn":20},{"ruleId":"227","severity":1,"message":"240","line":136,"column":9,"nodeType":"229","messageId":"230","endLine":136,"endColumn":22},{"ruleId":"227","severity":1,"message":"241","line":145,"column":9,"nodeType":"229","messageId":"230","endLine":145,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":154,"column":25,"nodeType":"244","messageId":"245","endLine":154,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":181,"column":32,"nodeType":"244","messageId":"245","endLine":181,"endColumn":34},{"ruleId":"242","severity":1,"message":"243","line":199,"column":25,"nodeType":"244","messageId":"245","endLine":199,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":199,"column":47,"nodeType":"244","messageId":"245","endLine":199,"endColumn":49},{"ruleId":"227","severity":1,"message":"246","line":14,"column":8,"nodeType":"229","messageId":"230","endLine":14,"endColumn":12},{"ruleId":"227","severity":1,"message":"247","line":18,"column":22,"nodeType":"229","messageId":"230","endLine":18,"endColumn":34},{"ruleId":"227","severity":1,"message":"248","line":1,"column":23,"nodeType":"229","messageId":"230","endLine":1,"endColumn":45},{"ruleId":"227","severity":1,"message":"249","line":3,"column":3,"nodeType":"229","messageId":"230","endLine":3,"endColumn":9},{"ruleId":"227","severity":1,"message":"250","line":7,"column":3,"nodeType":"229","messageId":"230","endLine":7,"endColumn":6},{"ruleId":"227","severity":1,"message":"251","line":8,"column":3,"nodeType":"229","messageId":"230","endLine":8,"endColumn":7},{"ruleId":"227","severity":1,"message":"252","line":9,"column":3,"nodeType":"229","messageId":"230","endLine":9,"endColumn":9},{"ruleId":"227","severity":1,"message":"253","line":10,"column":3,"nodeType":"229","messageId":"230","endLine":10,"endColumn":8},{"ruleId":"227","severity":1,"message":"254","line":13,"column":3,"nodeType":"229","messageId":"230","endLine":13,"endColumn":9},{"ruleId":"227","severity":1,"message":"255","line":14,"column":3,"nodeType":"229","messageId":"230","endLine":14,"endColumn":11},{"ruleId":"227","severity":1,"message":"256","line":15,"column":3,"nodeType":"229","messageId":"230","endLine":15,"endColumn":17},{"ruleId":"227","severity":1,"message":"257","line":16,"column":3,"nodeType":"229","messageId":"230","endLine":16,"endColumn":8},{"ruleId":"227","severity":1,"message":"258","line":18,"column":10,"nodeType":"229","messageId":"230","endLine":18,"endColumn":16},{"ruleId":"227","severity":1,"message":"259","line":20,"column":31,"nodeType":"229","messageId":"230","endLine":20,"endColumn":41},{"ruleId":"227","severity":1,"message":"260","line":24,"column":10,"nodeType":"229","messageId":"230","endLine":24,"endColumn":22},{"ruleId":"227","severity":1,"message":"261","line":33,"column":5,"nodeType":"229","messageId":"230","endLine":33,"endColumn":7},{"ruleId":"227","severity":1,"message":"262","line":34,"column":5,"nodeType":"229","messageId":"230","endLine":34,"endColumn":17},{"ruleId":"227","severity":1,"message":"263","line":35,"column":5,"nodeType":"229","messageId":"230","endLine":35,"endColumn":9},{"ruleId":"227","severity":1,"message":"264","line":75,"column":10,"nodeType":"229","messageId":"230","endLine":75,"endColumn":23},{"ruleId":"227","severity":1,"message":"265","line":75,"column":25,"nodeType":"229","messageId":"230","endLine":75,"endColumn":41},{"ruleId":"227","severity":1,"message":"266","line":76,"column":11,"nodeType":"229","messageId":"230","endLine":76,"endColumn":17},{"ruleId":"227","severity":1,"message":"267","line":77,"column":9,"nodeType":"229","messageId":"230","endLine":77,"endColumn":14},{"ruleId":"227","severity":1,"message":"268","line":78,"column":11,"nodeType":"229","messageId":"230","endLine":78,"endColumn":13},{"ruleId":"227","severity":1,"message":"269","line":79,"column":11,"nodeType":"229","messageId":"230","endLine":79,"endColumn":19},{"ruleId":"227","severity":1,"message":"270","line":79,"column":21,"nodeType":"229","messageId":"230","endLine":79,"endColumn":32},{"ruleId":"227","severity":1,"message":"271","line":80,"column":11,"nodeType":"229","messageId":"230","endLine":80,"endColumn":22},{"ruleId":"227","severity":1,"message":"272","line":80,"column":24,"nodeType":"229","messageId":"230","endLine":80,"endColumn":38},{"ruleId":"227","severity":1,"message":"273","line":81,"column":11,"nodeType":"229","messageId":"230","endLine":81,"endColumn":22},{"ruleId":"227","severity":1,"message":"274","line":81,"column":24,"nodeType":"229","messageId":"230","endLine":81,"endColumn":38},{"ruleId":"227","severity":1,"message":"275","line":82,"column":11,"nodeType":"229","messageId":"230","endLine":82,"endColumn":17},{"ruleId":"227","severity":1,"message":"276","line":82,"column":19,"nodeType":"229","messageId":"230","endLine":82,"endColumn":28},{"ruleId":"227","severity":1,"message":"277","line":83,"column":11,"nodeType":"229","messageId":"230","endLine":83,"endColumn":15},{"ruleId":"227","severity":1,"message":"278","line":84,"column":18,"nodeType":"229","messageId":"230","endLine":84,"endColumn":26},{"ruleId":"227","severity":1,"message":"279","line":85,"column":11,"nodeType":"229","messageId":"230","endLine":85,"endColumn":13},{"ruleId":"227","severity":1,"message":"280","line":85,"column":15,"nodeType":"229","messageId":"230","endLine":85,"endColumn":20},{"ruleId":"227","severity":1,"message":"281","line":86,"column":11,"nodeType":"229","messageId":"230","endLine":86,"endColumn":22},{"ruleId":"227","severity":1,"message":"282","line":86,"column":24,"nodeType":"229","messageId":"230","endLine":86,"endColumn":38},{"ruleId":"283","severity":1,"message":"284","line":88,"column":13,"nodeType":"285","endLine":112,"endColumn":4},{"ruleId":"283","severity":1,"message":"286","line":112,"column":6,"nodeType":"287","endLine":112,"endColumn":8,"suggestions":"288"},{"ruleId":"227","severity":1,"message":"289","line":1,"column":52,"nodeType":"229","messageId":"230","endLine":1,"endColumn":55},{"ruleId":"227","severity":1,"message":"254","line":1,"column":57,"nodeType":"229","messageId":"230","endLine":1,"endColumn":63},{"ruleId":"227","severity":1,"message":"251","line":1,"column":65,"nodeType":"229","messageId":"230","endLine":1,"endColumn":69},{"ruleId":"227","severity":1,"message":"253","line":1,"column":71,"nodeType":"229","messageId":"230","endLine":1,"endColumn":76},{"ruleId":"227","severity":1,"message":"290","line":1,"column":88,"nodeType":"229","messageId":"230","endLine":1,"endColumn":99},{"ruleId":"227","severity":1,"message":"291","line":1,"column":101,"nodeType":"229","messageId":"230","endLine":1,"endColumn":105},{"ruleId":"227","severity":1,"message":"292","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":15},{"ruleId":"227","severity":1,"message":"293","line":3,"column":19,"nodeType":"229","messageId":"230","endLine":3,"endColumn":29},{"ruleId":"227","severity":1,"message":"258","line":4,"column":10,"nodeType":"229","messageId":"230","endLine":4,"endColumn":16},{"ruleId":"227","severity":1,"message":"294","line":7,"column":8,"nodeType":"229","messageId":"230","endLine":7,"endColumn":18},{"ruleId":"227","severity":1,"message":"295","line":8,"column":8,"nodeType":"229","messageId":"230","endLine":8,"endColumn":26},{"ruleId":"227","severity":1,"message":"296","line":13,"column":5,"nodeType":"229","messageId":"230","endLine":13,"endColumn":12},{"ruleId":"227","severity":1,"message":"297","line":20,"column":12,"nodeType":"229","messageId":"230","endLine":20,"endColumn":34},{"ruleId":"227","severity":1,"message":"298","line":20,"column":36,"nodeType":"229","messageId":"230","endLine":20,"endColumn":61},{"ruleId":"227","severity":1,"message":"299","line":21,"column":13,"nodeType":"229","messageId":"230","endLine":21,"endColumn":24},{"ruleId":"227","severity":1,"message":"300","line":21,"column":26,"nodeType":"229","messageId":"230","endLine":21,"endColumn":40},{"ruleId":"227","severity":1,"message":"301","line":24,"column":13,"nodeType":"229","messageId":"230","endLine":24,"endColumn":37},{"ruleId":"227","severity":1,"message":"302","line":24,"column":39,"nodeType":"229","messageId":"230","endLine":24,"endColumn":66},{"ruleId":"227","severity":1,"message":"303","line":25,"column":32,"nodeType":"229","messageId":"230","endLine":25,"endColumn":52},{"ruleId":"227","severity":1,"message":"304","line":26,"column":13,"nodeType":"229","messageId":"230","endLine":26,"endColumn":28},{"ruleId":"227","severity":1,"message":"305","line":55,"column":11,"nodeType":"229","messageId":"230","endLine":55,"endColumn":27},{"ruleId":"227","severity":1,"message":"306","line":73,"column":11,"nodeType":"229","messageId":"230","endLine":73,"endColumn":17},{"ruleId":"227","severity":1,"message":"307","line":93,"column":11,"nodeType":"229","messageId":"230","endLine":93,"endColumn":31},{"ruleId":"227","severity":1,"message":"308","line":98,"column":13,"nodeType":"229","messageId":"230","endLine":98,"endColumn":23},{"ruleId":"227","severity":1,"message":"309","line":102,"column":11,"nodeType":"229","messageId":"230","endLine":102,"endColumn":24},{"ruleId":"227","severity":1,"message":"308","line":133,"column":13,"nodeType":"229","messageId":"230","endLine":133,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":146,"column":45,"nodeType":"244","messageId":"245","endLine":146,"endColumn":47},{"ruleId":"310","severity":1,"message":"311","line":163,"column":66,"nodeType":"312","endLine":163,"endColumn":83},{"ruleId":"227","severity":1,"message":"313","line":12,"column":7,"nodeType":"229","messageId":"230","endLine":12,"endColumn":22},{"ruleId":"223","replacedBy":"314"},{"ruleId":"225","replacedBy":"315"},{"ruleId":"227","severity":1,"message":"316","line":13,"column":12,"nodeType":"229","messageId":"230","endLine":13,"endColumn":18},{"ruleId":"227","severity":1,"message":"255","line":8,"column":5,"nodeType":"229","messageId":"230","endLine":8,"endColumn":13},{"ruleId":"227","severity":1,"message":"317","line":25,"column":7,"nodeType":"229","messageId":"230","endLine":25,"endColumn":11},{"ruleId":"227","severity":1,"message":"318","line":32,"column":13,"nodeType":"229","messageId":"230","endLine":32,"endColumn":32},{"ruleId":"227","severity":1,"message":"235","line":34,"column":12,"nodeType":"229","messageId":"230","endLine":34,"endColumn":23},{"ruleId":"227","severity":1,"message":"319","line":34,"column":25,"nodeType":"229","messageId":"230","endLine":34,"endColumn":39},{"ruleId":"227","severity":1,"message":"320","line":36,"column":13,"nodeType":"229","messageId":"230","endLine":36,"endColumn":22},{"ruleId":"283","severity":1,"message":"321","line":54,"column":10,"nodeType":"287","endLine":54,"endColumn":26,"suggestions":"322"},{"ruleId":"227","severity":1,"message":"237","line":88,"column":11,"nodeType":"229","messageId":"230","endLine":88,"endColumn":21},{"ruleId":"323","severity":1,"message":"324","line":148,"column":46,"nodeType":"285","messageId":"325","endLine":148,"endColumn":48},{"ruleId":"227","severity":1,"message":"326","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"327","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"246","line":2,"column":8,"nodeType":"229","messageId":"230","endLine":2,"endColumn":12},{"ruleId":"227","severity":1,"message":"328","line":3,"column":71,"nodeType":"229","messageId":"230","endLine":3,"endColumn":81},{"ruleId":"227","severity":1,"message":"329","line":9,"column":5,"nodeType":"229","messageId":"230","endLine":9,"endColumn":11},{"ruleId":"227","severity":1,"message":"253","line":13,"column":5,"nodeType":"229","messageId":"230","endLine":13,"endColumn":10},{"ruleId":"227","severity":1,"message":"250","line":14,"column":5,"nodeType":"229","messageId":"230","endLine":14,"endColumn":8},{"ruleId":"227","severity":1,"message":"257","line":16,"column":5,"nodeType":"229","messageId":"230","endLine":16,"endColumn":10},{"ruleId":"242","severity":1,"message":"243","line":38,"column":103,"nodeType":"244","messageId":"245","endLine":38,"endColumn":105},{"ruleId":"242","severity":1,"message":"243","line":39,"column":101,"nodeType":"244","messageId":"245","endLine":39,"endColumn":103},{"ruleId":"242","severity":1,"message":"243","line":40,"column":109,"nodeType":"244","messageId":"245","endLine":40,"endColumn":111},{"ruleId":"227","severity":1,"message":"330","line":4,"column":27,"nodeType":"229","messageId":"230","endLine":4,"endColumn":33},{"ruleId":"227","severity":1,"message":"331","line":4,"column":35,"nodeType":"229","messageId":"230","endLine":4,"endColumn":39},{"ruleId":"227","severity":1,"message":"332","line":4,"column":41,"nodeType":"229","messageId":"230","endLine":4,"endColumn":46},{"ruleId":"227","severity":1,"message":"333","line":4,"column":48,"nodeType":"229","messageId":"230","endLine":4,"endColumn":54},{"ruleId":"227","severity":1,"message":"334","line":4,"column":56,"nodeType":"229","messageId":"230","endLine":4,"endColumn":69},{"ruleId":"227","severity":1,"message":"328","line":4,"column":71,"nodeType":"229","messageId":"230","endLine":4,"endColumn":81},{"ruleId":"227","severity":1,"message":"335","line":13,"column":5,"nodeType":"229","messageId":"230","endLine":13,"endColumn":11},{"ruleId":"227","severity":1,"message":"249","line":16,"column":5,"nodeType":"229","messageId":"230","endLine":16,"endColumn":11},{"ruleId":"283","severity":1,"message":"286","line":43,"column":8,"nodeType":"287","endLine":43,"endColumn":10,"suggestions":"336"},{"ruleId":"227","severity":1,"message":"337","line":50,"column":15,"nodeType":"229","messageId":"230","endLine":50,"endColumn":27},{"ruleId":"227","severity":1,"message":"338","line":51,"column":15,"nodeType":"229","messageId":"230","endLine":51,"endColumn":27},{"ruleId":"227","severity":1,"message":"337","line":89,"column":15,"nodeType":"229","messageId":"230","endLine":89,"endColumn":27},{"ruleId":"227","severity":1,"message":"339","line":4,"column":10,"nodeType":"229","messageId":"230","endLine":4,"endColumn":19},{"ruleId":"227","severity":1,"message":"340","line":5,"column":5,"nodeType":"229","messageId":"230","endLine":5,"endColumn":16},{"ruleId":"227","severity":1,"message":"341","line":6,"column":5,"nodeType":"229","messageId":"230","endLine":6,"endColumn":15},{"ruleId":"227","severity":1,"message":"342","line":14,"column":10,"nodeType":"229","messageId":"230","endLine":14,"endColumn":31},{"ruleId":"227","severity":1,"message":"343","line":17,"column":5,"nodeType":"229","messageId":"230","endLine":17,"endColumn":9},{"ruleId":"227","severity":1,"message":"344","line":18,"column":5,"nodeType":"229","messageId":"230","endLine":18,"endColumn":10},{"ruleId":"227","severity":1,"message":"254","line":19,"column":5,"nodeType":"229","messageId":"230","endLine":19,"endColumn":11},{"ruleId":"227","severity":1,"message":"345","line":20,"column":5,"nodeType":"229","messageId":"230","endLine":20,"endColumn":13},{"ruleId":"227","severity":1,"message":"335","line":23,"column":5,"nodeType":"229","messageId":"230","endLine":23,"endColumn":11},{"ruleId":"227","severity":1,"message":"253","line":24,"column":5,"nodeType":"229","messageId":"230","endLine":24,"endColumn":10},{"ruleId":"227","severity":1,"message":"250","line":25,"column":5,"nodeType":"229","messageId":"230","endLine":25,"endColumn":8},{"ruleId":"227","severity":1,"message":"249","line":26,"column":5,"nodeType":"229","messageId":"230","endLine":26,"endColumn":11},{"ruleId":"227","severity":1,"message":"289","line":28,"column":5,"nodeType":"229","messageId":"230","endLine":28,"endColumn":8},{"ruleId":"227","severity":1,"message":"346","line":32,"column":5,"nodeType":"229","messageId":"230","endLine":32,"endColumn":22},{"ruleId":"227","severity":1,"message":"337","line":80,"column":15,"nodeType":"229","messageId":"230","endLine":80,"endColumn":27},{"ruleId":"227","severity":1,"message":"338","line":81,"column":15,"nodeType":"229","messageId":"230","endLine":81,"endColumn":27},{"ruleId":"310","severity":1,"message":"311","line":101,"column":128,"nodeType":"312","endLine":101,"endColumn":153},{"ruleId":"347","severity":1,"message":"348","line":140,"column":13,"nodeType":"349","endLine":140,"endColumn":71},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'FundPostABI' is defined but never used.","'ColorModeSwitcher' is defined but never used.","'Logo' is defined but never used.","'setFundPost' is assigned a value but never used.","'selectedImg' is assigned a value but never used.","'sortView' is assigned a value but never used.","'unsortView' is assigned a value but never used.","'captureFile' is assigned a value but never used.","'uploadImage' is assigned a value but never used.","'tipImageOwner' is assigned a value but never used.","'setselectedImg' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Web3' is defined but never used.","'setIsLoading' is assigned a value but never used.","'withDefaultColorScheme' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'Spacer' is defined but never used.","'Image' is defined but never used.","'Avatar' is defined but never used.","'Skeleton' is defined but never used.","'SkeletonCircle' is defined but never used.","'Stack' is defined but never used.","'create' is defined but never used.","'useReducer' is defined but never used.","'Web3Provider' is defined but never used.","'sf' is defined but never used.","'LockContract' is defined but never used.","'web3' is defined but never used.","'isPageLoading' is assigned a value but never used.","'setIsPageLoading' is assigned a value but never used.","'avatar' is assigned a value but never used.","'toast' is assigned a value but never used.","'id' is assigned a value but never used.","'isLocked' is assigned a value but never used.","'setIsLocked' is assigned a value but never used.","'lockAddress' is assigned a value but never used.","'setLockAddress' is assigned a value but never used.","'blockNumber' is assigned a value but never used.","'setBlockNumber' is assigned a value but never used.","'sender' is assigned a value but never used.","'setSender' is assigned a value but never used.","'web3' is assigned a value but never used.","'setTopic' is assigned a value but never used.","'db' is assigned a value but never used.","'setdb' is assigned a value but never used.","'fundraiseId' is assigned a value but never used.","'setFundraiseId' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'currentAccount'. Either include it or remove the dependency array.","ArrayExpression",["352"],"'Tag' is defined but never used.","'FormControl' is defined but never used.","'Form' is defined but never used.","'OrbitDb' is defined but never used.","'Identities' is defined but never used.","'IPFSpubsub' is defined but never used.","'svgAvatarGenerator' is defined but never used.","'orbitdb' is defined but never used.","'isConnectingToDatabase' is assigned a value but never used.","'setIsConnectingToDatabase' is assigned a value but never used.","'isStreaming' is assigned a value but never used.","'setIsStreaming' is assigned a value but never used.","'superchatContractAddress' is assigned a value but never used.","'setSuperchatContractAddress' is assigned a value but never used.","'setSuperchatContract' is assigned a value but never used.","'isSuperChatting' is assigned a value but never used.","'subscribeToTopic' is assigned a value but never used.","'initDb' is assigned a value but never used.","'handleSuperChatValue' is assigned a value but never used.","'newMessage' is assigned a value but never used.","'sendSuperChat' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ipfsAuthOptions' is assigned a value but never used.",["350"],["351"],"'TiPlus' is defined but never used.","'ipfs' is assigned a value but never used.","'isMetamaskInstalled' is assigned a value but never used.","'setSelectedImg' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["353"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'withRouter' is defined but never used.","'Center' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useRouteMatch' is defined but never used.","'HStack' is defined but never used.",["354"],"'networkData2' is assigned a value but never used.","'networkData1' is assigned a value but never used.","'useParams' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'createStandaloneToast' is defined but never used.","'Grid' is defined but never used.","'Badge' is defined but never used.","'TagLabel' is defined but never used.","'NFTMarketContract' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"355","fix":"359"},"Update the dependencies array to be: [currentAccount]",{"range":"360","text":"361"},"Update the dependencies array to be: [currentAccount, init]",{"range":"362","text":"363"},{"range":"364","text":"361"},[3428,3430],"[currentAccount]",[1613,1629],"[currentAccount, init]",[983,985]]